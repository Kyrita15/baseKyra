-- Primero eliminamos las tablas si ya existen
DROP TABLE IF EXISTS PXS CASCADE;
DROP TABLE IF EXISTS PXO CASCADE;
DROP TABLE IF EXISTS PXI CASCADE;
DROP TABLE IF EXISTS PXA CASCADE;
DROP TABLE IF EXISTS PROVEEDORES CASCADE;
DROP TABLE IF EXISTS COMPRAS CASCADE;
DROP TABLE IF EXISTS SALIDAS CASCADE;
DROP TABLE IF EXISTS INGRESOS CASCADE;
DROP TABLE IF EXISTS NOMINAS CASCADE;
DROP TABLE IF EXISTS DXN CASCADE;
DROP TABLE IF EXISTS DESCUENTOS CASCADE;
DROP TABLE IF EXISTS BXN CASCADE;
DROP TABLE IF EXISTS BONIFICACIONES CASCADE;
DROP TABLE IF EXISTS AJUSTES CASCADE;
DROP TABLE IF EXISTS EMPLEADOS CASCADE;
DROP TABLE IF EXISTS PXF CASCADE;
DROP TABLE IF EXISTS STODETALLE CASCADE;
DROP TABLE IF EXISTS FACTURAS CASCADE;
DROP TABLE IF EXISTS PRODUCTOS CASCADE;
DROP TABLE IF EXISTS CLIENTES CASCADE;

-- Luego creamos las tablas
CREATE TABLE CLIENTES (
    CLICODIGO CHAR(7) PRIMARY KEY,
    CLINOMBRE CHAR(60) NOT NULL,
    CLIIDENTIFICACION CHAR(13) NOT NULL,
    CLIDIRECCION CHAR(60) NOT NULL,
    CLITELEFONO CHAR(10) NOT NULL,
    CLICELULAR CHAR(10) NOT NULL,
    CLIEMAIL CHAR(60),
    CLITIPO CHAR(3) NOT NULL CHECK (CLITIPO IN ('NAT', 'JUR')),
    CLISTATUS CHAR(3) NOT NULL CHECK (CLISTATUS IN ('ACT', 'INA')),
    CONSTRAINT CK_CLIIDENTIFICACION CHECK (CLIIDENTIFICACION ~ '^[0-9]{13}$'),
    CONSTRAINT CK_CLITELEFONO CHECK (CLITELEFONO ~ '^[0-9]{10}$'),
    CONSTRAINT CK_CLICELULAR CHECK (CLICELULAR ~ '^[0-9]{10}$'),
    CONSTRAINT CK_CLIEMAIL CHECK (CLIEMAIL ~ '^[^@]+@[^@]+\.[^@]+$')
);

CREATE TABLE PRODUCTOS (
    PROCODIGO CHAR(9) PRIMARY KEY,
    PRODESCRIPCION CHAR(50) NOT NULL,
    PROUNIDADMEDIDA CHAR(3) NOT NULL,
    PROSALDOINICIAL DECIMAL(9,2) NOT NULL CHECK (PROSALDOINICIAL >= 0),
    PROINGRESOS DECIMAL(9,2) NOT NULL CHECK (PROINGRESOS >= 0),
    PROEGRESOS DECIMAL(9,2) NOT NULL CHECK (PROEGRESOS >= 0),
    PROAJUSTES DECIMAL(9,2) NOT NULL CHECK (PROAJUSTES >= 0),
    PROSALDOFINAL DECIMAL(9,2) NOT NULL CHECK (PROSALDOFINAL >= 0),
    PROCOSTOUM DECIMAL(7,2) NOT NULL CHECK (PROCOSTOUM >= 0),
    PROPRECIOUM DECIMAL(7,2) NOT NULL CHECK (PROPRECIOUM >= 0),
    PROSTATUS CHAR(3) NOT NULL CHECK (PROSTATUS IN ('ACT', 'INA')),
    CODIGOBARRAS CHAR(20),
    UBICACIONES CHAR(10),
    IVA NUMERIC(5,2),
    DETALLE CHAR(255),
    FOTO BYTEA,
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ICE NUMERIC(5,2)
);

CREATE TABLE FACTURAS (
    ID_CABECERA SERIAL PRIMARY KEY,
    FCTSERIE1 CHAR(3) NOT NULL,
    FCTSERIE2 CHAR(3) NOT NULL,
    FCTNUMFACTURA CHAR(10) NOT NULL,
    CLICODIGO CHAR(7) NOT NULL,
    CLINOMBRE CHAR(60) NOT NULL,
    FECHA_EMISION DATE NOT NULL,
    FECHA_VENCIMIENTO DATE NOT NULL,
    SUBTOTAL NUMERIC(10,2) NOT NULL,
    DESCUENTO_PORCENTAJE NUMERIC(5,2),
    DESCUENTO_VALOR NUMERIC(10,2),
    SUBTOTAL_CON_DESCUENTO NUMERIC(10,2),
    IVA NUMERIC(10,2),
    ICE NUMERIC(10,2),
    TOTAL NUMERIC(10,2) NOT NULL,
    CLAVEACCESO CHAR(49),
    CONSTRAINT FK_FACTURAS_CLIENTES_CODIGO FOREIGN KEY (CLICODIGO) REFERENCES CLIENTES (CLICODIGO),
    CONSTRAINT FK_FACTURAS_CLIENTES_NOMBRE FOREIGN KEY (CLINOMBRE) REFERENCES CLIENTES (CLINOMBRE)
);
ALTER TABLE STODETALLE ADD CONSTRAINT FK_STODETALLE_FACTURAS FOREIGN KEY (STONUMFACTURA, STOSERIE1, STOSERIE2) REFERENCES FACTURAS (FCTNUMFACTURA, FCTSERIE1, FCTSERIE2);


CREATE TABLE STODETALLE (
    ID SERIAL PRIMARY KEY,
    STOSERIE1 CHAR(3) NOT NULL,
    STOSERIE2 CHAR(3) NOT NULL,
    STONUMFACTURA CHAR(10) NOT NULL,
    FECHA_HORA TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CODIGO_PRODUCTO VARCHAR(10) NOT NULL,
    CODIGO_CLIENTE CHAR(7) NOT NULL,
    CANTIDAD_PRODUCTO NUMERIC(10,2) NOT NULL,
    PRECIO_UNITARIO NUMERIC(10,2) NOT NULL,
    PRECIO_TOTAL NUMERIC(10,2) NOT NULL,
    COSTO_UNITARIO NUMERIC(10,2) NOT NULL,
    COSTO_TOTAL NUMERIC(10,2) NOT NULL,
    NOMBRE_PRODUCTO CHAR(100) NOT NULL,
    CONSTRAINT FK_STODETALLE_PRODUCTOS FOREIGN KEY (CODIGO_PRODUCTO) REFERENCES PRODUCTOS (PROCODIGO),
    CONSTRAINT FK_STODETALLE_CLIENTES FOREIGN KEY (CODIGO_CLIENTE) REFERENCES CLIENTES (CLICODIGO)
);



CREATE TABLE EMPLEADOS (
    EMPCODIGO CHAR(7) PRIMARY KEY,
    EMPAPELLIDO1 CHAR(30) NOT NULL,
    EMPAPELLIDO2 CHAR(30),
    EMPNOMBRE1 CHAR(30) NOT NULL,
    EMPNOMBRE2 CHAR(30),
    EMPFECHANACIMIENTO DATE NOT NULL,
    EMPSEXO CHAR(1) NOT NULL CHECK (EMPSEXO IN ('H', 'M')),
    EMPEMAIL CHAR(60) NOT NULL,
    EMPDIRECCION CHAR(60) NOT NULL,
    EMPTIPOSANGRE CHAR(3) NOT NULL,
    EMPSUELDO NUMERIC(7,2) NOT NULL CHECK (EMPSUELDO >= 0),
    EMPBANCO CHAR(30) NOT NULL,
    EMPCUENTA CHAR(20) NOT NULL,
    EMPSTATUS CHAR(3) NOT NULL CHECK (EMPSTATUS IN ('ACT', 'INA')),
    CONSTRAINT CK_EMPEMAIL CHECK (EMPEMAIL ~ '^[^@]+@[^@]+\.[^@]+$')
);

CREATE TABLE AJUSTES (
    AJUCODIGO SERIAL PRIMARY KEY,
    EMPCODIGO CHAR(7) NOT NULL,
    AJUDESCRIPCION CHAR(60) NOT NULL,
    AJUFECHA DATE NOT NULL CHECK (AJUFECHA >= '1900-01-01'),
    AJUCANTIDADTOTAL NUMERIC(9,2) CHECK (AJUCANTIDADTOTAL >= 0),
    CONSTRAINT FK_AJUSTES_EMPLEADOS FOREIGN KEY (EMPCODIGO) REFERENCES EMPLEADOS (EMPCODIGO)
);

CREATE TABLE BONIFICACIONES (
    BONCODIGO CHAR(5) PRIMARY KEY,
    BONDESCRIPCION CHAR(30) NOT NULL,
    BONVALOR DECIMAL(7,2) NOT NULL CHECK (BONVALOR >= 0)
);

CREATE TABLE BXN (
    BONCODIGO CHAR(5) NOT NULL,
    NOMCODIGO CHAR(7) NOT NULL,
    BXNVALOR DECIMAL(7,2) NOT NULL CHECK (BXNVALOR >= 0),
    BXNSTATUS CHAR(3) NOT NULL,
    PRIMARY KEY (BONCODIGO, NOMCODIGO),
    CONSTRAINT FK_BXN_BONIFICACIONES FOREIGN KEY (BONCODIGO) REFERENCES BONIFICACIONES (BONCODIGO)
);

CREATE TABLE DESCUENTOS (
    DESCODIGO CHAR(5) PRIMARY KEY,
    DESDESCRIPCION CHAR(30) NOT NULL,
    DESVALOR DECIMAL(7,2) NOT NULL CHECK (DESVALOR >= 0)
);

CREATE TABLE DXN (
    NOMCODIGO CHAR(7) NOT NULL,
    DESCODIGO CHAR(5) NOT NULL,
    DXNVALOR DECIMAL(7,2) NOT NULL CHECK (DXNVALOR >= 0),
    DXNSTATUS CHAR(3) NOT NULL,
    PRIMARY KEY (NOMCODIGO, DESCODIGO),
    CONSTRAINT FK_DXN_DESCUENTOS FOREIGN KEY (DESCODIGO) REFERENCES DESCUENTOS (DESCODIGO)
);

CREATE TABLE NOMINAS (
    NOMCODIGO CHAR(7) PRIMARY KEY,
    EMPCODIGO CHAR(7) NOT NULL,
    NOMANIO CHAR(4) NOT NULL,
    NOMMES CHAR(2) NOT NULL,
    NOMFECHAINICIAL DATE NOT NULL CHECK (NOMFECHAINICIAL >= '1900-01-01'),
    NOMFECHAFINAL DATE NOT NULL CHECK (NOMFECHAFINAL >= '1900-01-01'),
    NOMSTATUS CHAR(3) NOT NULL CHECK (NOMSTATUS IN ('ACT', 'INA')),
    CONSTRAINT FK_NOMINAS_EMPLEADOS FOREIGN KEY (EMPCODIGO) REFERENCES EMPLEADOS (EMPCODIGO)
);

CREATE TABLE INGRESOS (
    INGCODIGO SERIAL PRIMARY KEY,
    EMPCODIGO CHAR(7) NOT NULL,
    INGDESCRIPCION CHAR(30) NOT NULL,
    INGFECHA DATE NOT NULL CHECK (INGFECHA >= '1900-01-01'),
    INGCANTIDADTOTAL NUMERIC(9,2) CHECK (INGCANTIDADTOTAL >= 0),
    INGREFERENCIA CHAR(60),
    CONSTRAINT FK_INGRESOS_EMPLEADOS FOREIGN KEY (EMPCODIGO) REFERENCES EMPLEADOS (EMPCODIGO)
);

CREATE TABLE SALIDAS (
    SALCODIGO SERIAL PRIMARY KEY,
    EMPCODIGO CHAR(7) NOT NULL,
    SALDESCRIPCION CHAR(30) NOT NULL,
    SALFECHA DATE NOT NULL CHECK (SALFECHA >= '1900-01-01'),
    SALCANTIDADTOTAL NUMERIC(9,2) CHECK (SALCANTIDADTOTAL >= 0),
    SALREFERENCIA CHAR(60),
    CONSTRAINT FK_SALIDAS_EMPLEADOS FOREIGN KEY (EMPCODIGO) REFERENCES EMPLEADOS (EMPCODIGO)
);

CREATE TABLE COMPRAS (
    OCNUMERO CHAR(9) PRIMARY KEY,
    PRVCODIGO CHAR(7) NOT NULL,
    OCFECHA DATE NOT NULL CHECK (OCFECHA >= '1900-01-01'),
    OCSUBTOTAL NUMERIC(9,2) NOT NULL CHECK (OCSUBTOTAL >= 0),
    OCDESCUENTO NUMERIC(9,2) CHECK (OCDESCUENTO >= 0),
    OCVALOR_IVA NUMERIC(9,2) CHECK (OCVALOR_IVA >= 0),
    OCVALOR_ICE NUMERIC(9,2) CHECK (OCVALOR_ICE >= 0),
    OCFORMAPAGO CHAR(5) NOT NULL,
    OCFACTURA_ASOCIADA CHAR(30) NOT NULL,
    OCSTATUS CHAR(3) CHECK (OCSTATUS IN ('ACT', 'INA')),
    CONSTRAINT FK_COMPRAS_PROVEEDORES FOREIGN KEY (PRVCODIGO) REFERENCES PROVEEDORES (PRVCODIGO)
);

CREATE TABLE PROVEEDORES (
    PRVCODIGO CHAR(7) PRIMARY KEY,
    PRVNOMBRE CHAR(30) NOT NULL,
    PRVIDENTIFICACION CHAR(10) NOT NULL,
    PRVDIRECCION CHAR(60) NOT NULL,
    PRVTELEFONO CHAR(10),
    PRVCELULAR CHAR(10),
    PRVEMAIL CHAR(60),
    PRVTIPO CHAR(3) NOT NULL CHECK (PRVTIPO IN ('NAT', 'JUR')),
    PRVSTATUS CHAR(3) NOT NULL CHECK (PRVSTATUS IN ('ACT', 'INA')),
    CONSTRAINT CK_PRVIDENTIFICACION CHECK (PRVIDENTIFICACION ~ '^[0-9]{10}$'),
    CONSTRAINT CK_PRVTELEFONO CHECK (PRVTELEFONO ~ '^[0-9]{10}$'),
    CONSTRAINT CK_PRVCELULAR CHECK (PRVCELULAR ~ '^[0-9]{10}$'),
    CONSTRAINT CK_PRVEMAIL CHECK (PRVEMAIL ~ '^[^@]+@[^@]+\.[^@]+$')
);

CREATE TABLE PXA (
    AJUCODIGO INT NOT NULL,
    PROCODIGO CHAR(9) NOT NULL,
    PXACANTIDAD NUMERIC(9,2) NOT NULL CHECK (PXACANTIDAD >= 0),
    PRIMARY KEY (AJUCODIGO, PROCODIGO),
    CONSTRAINT FK_PXA_AJUSTES FOREIGN KEY (AJUCODIGO) REFERENCES AJUSTES (AJUCODIGO),
    CONSTRAINT FK_PXA_PRODUCTOS FOREIGN KEY (PROCODIGO) REFERENCES PRODUCTOS (PROCODIGO)
);

CREATE TABLE PXI (
    INGCODIGO INT NOT NULL,
    PROCODIGO CHAR(9) NOT NULL,
    PXICANTIDAD NUMERIC(9,2) NOT NULL CHECK (PXICANTIDAD >= 0),
    PRIMARY KEY (INGCODIGO, PROCODIGO),
    CONSTRAINT FK_PXI_INGRESOS FOREIGN KEY (INGCODIGO) REFERENCES INGRESOS (INGCODIGO),
    CONSTRAINT FK_PXI_PRODUCTOS FOREIGN KEY (PROCODIGO) REFERENCES PRODUCTOS (PROCODIGO)
);

CREATE TABLE PXO (
    OCNUMERO CHAR(9) NOT NULL,
    PROCODIGO CHAR(9) NOT NULL,
    PXCCANTIDAD NUMERIC(9,2) NOT NULL CHECK (PXCCANTIDAD >= 0),
    PXCVALOR NUMERIC(7,2) NOT NULL CHECK (PXCVALOR >= 0),
    PXCSUBTOTAL NUMERIC(9,2) NOT NULL CHECK (PXCSUBTOTAL >= 0),
    PXCSTATUS CHAR(3) NOT NULL CHECK (PXCSTATUS IN ('ACT', 'INA')),
    PRIMARY KEY (OCNUMERO, PROCODIGO),
    CONSTRAINT FK_PXO_COMPRAS FOREIGN KEY (OCNUMERO) REFERENCES COMPRAS (OCNUMERO),
    CONSTRAINT FK_PXO_PRODUCTOS FOREIGN KEY (PROCODIGO) REFERENCES PRODUCTOS (PROCODIGO)
);

CREATE TABLE PXS (
    SALCODIGO INT NOT NULL,
    PROCODIGO CHAR(9) NOT NULL,
    PXSCANTIDAD NUMERIC(9,2) NOT NULL CHECK (PXSCANTIDAD >= 0),
    PRIMARY KEY (SALCODIGO, PROCODIGO),
    CONSTRAINT FK_PXS_SALIDAS FOREIGN KEY (SALCODIGO) REFERENCES SALIDAS (SALCODIGO),
    CONSTRAINT FK_PXS_PRODUCTOS FOREIGN KEY (PROCODIGO) REFERENCES PRODUCTOS (PROCODIGO)
);



-- Crear la función para actualizar la cantidad de productos al insertar en STODETALLE
CREATE OR REPLACE FUNCTION actualizar_saldo_productos_stodetalle() 
RETURNS TRIGGER AS $$
BEGIN
    UPDATE PRODUCTOS
    SET PROSALDOFINAL = PROSALDOFINAL - NEW.CANTIDAD_PRODUCTO
    WHERE PROCODIGO = NEW.CODIGO_PRODUCTO;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;


-- Crear el trigger para STODETALLE
CREATE TRIGGER trigger_actualizar_saldo_stodetalle
AFTER INSERT ON STODETALLE
FOR EACH ROW
EXECUTE FUNCTION actualizar_saldo_productos_stodetalle();
/*CREATE OR REPLACE FUNCTION generar_numero_factura()
RETURNS CHAR(16) AS $$
DECLARE
    max_serie1 CHAR(3);
    max_serie2 CHAR(3);
    max_numfactura CHAR(10);
    new_numfactura CHAR(10);
BEGIN
    -- Obtener el número máximo de factura actual
    SELECT COALESCE(MAX(FCTSERIE1), '001') INTO max_serie1 FROM FACTURAS;
    SELECT COALESCE(MAX(FCTSERIE2), '001') INTO max_serie2 FROM FACTURAS;
    SELECT COALESCE(MAX(FCTNUMFACTURA), '0000000000') INTO max_numfactura FROM FACTURAS;

    -- Incrementar el número de factura
    new_numfactura := LPAD((CAST(max_numfactura AS INTEGER) + 1)::TEXT, 10, '0');

    -- Devolver el nuevo número de factura completo
    RETURN max_serie1 || max_serie2 || new_numfactura;
END;
$$ LANGUAGE plpgsql;
*/
